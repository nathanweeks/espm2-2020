---
language: minimal

os: osx

env:
  global:
    - ZERO_AR_DATE=1
    - TZ=UTC
    - CACHE="${HOME}/.local"
    - MPICH_VER="3.3"
    - MPICH_URL_HEAD="https://www.mpich.org/static/downloads/${MPICH_VER}"
    - MPICH_URL_TAIL="mpich-${MPICH_VER}.tar.gz"
    - BUILD_TYPES="Debug RelWithDebInfo Release CodeCoverage"
    - PATH="${HOME}/.local/bin:$PATH"

matrix:
  fast_finish: true
  include:
    - &macOS
      os: osx
      osx_image: xcode10.2
      env:
        - BUILD_TYPE="InstallScript"
          GCC=9
          CC=gcc-9
          CXX=g++-9
          FC=gfortran-9
      addons:
        homebrew:
          packages:
            - gcc
            - mpich
            - shellcheck
          update: true
    - &macOS_allowed_failure
      <<: *macOS
      env:
        - GCC=9
          FC=gfortran-${GCC}
          BUILD_TYPES="Release CodeCoverage"
      addons:
        homebrew:
          packages:
            - cmake
            - gcc
            - openmpi
            - shellcheck
          update: true
    -
      <<: *macOS
      env:
        - GCC=9
          FC=gcc-${GCC}
          CC=gcc-${GCC}
          CXX=g++-${GCC}
      addons:
        homebrew:
          brewfile: true
          update: true
    - &ubuntu
      os: linux
      sudo: false
      dist: xenial
      env:
        - GCC=8
      cache:
        apt: true
        directories:
          - "$CACHE"
      addons:
        apt:
          sources: &linuxsrcs
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.kitware.com/ubuntu/ xenial main'
              key_url: 'https://apt.kitware.com/keys/kitware-archive-latest.asc'
          packages: &gcc8pkgs
            - gcc-8
            - gfortran-8
            - g++-8
            - cmake
    -
      <<: *ubuntu
      env:
        - GCC=7
      addons:
        apt:
          sources: *linuxsrcs
          packages: &gcc7pkgs
            - gcc-7
            - gfortran-7
            - g++-7
            - cmake
    -
      <<: *ubuntu
      env:
        - BUILD_TYPE="InstallScript"
          GCC=8
      addons:
        apt:
          sources: *linuxsrcs
          packages:
            - gcc-8
            - gfortran-8
            - g++-8
    - &linux_allowed_failure
      <<: *ubuntu
      env:
        - GCC=8
          OPENCOARRAYS_DEVELOPER=ON
      addons:
        apt:
          sources: *linuxsrcs
          packages: *gcc8pkgs

  allow_failures:
    - *linux_allowed_failure
    - *macOS_allowed_failure

    # macOS allowed failure due to random test timeouts w/ clang & OpenMPI

before_install:
  - source developer-scripts/travis/before_install.all.sh

install:
  - pwd
  - ./developer-scripts/travis/install.${TRAVIS_OS_NAME}.sh

script:
  - pwd
  - export SOURCE_DATE_EPOCH=$(git show -s --format=%ct $TRAVIS_COMMIT)
  - export LC_ALL=C
  - export TZ=UTC
  - export ZERO_AR_DATE=1
  - echo "SOURCE_DATE_EPOCH = ${SOURCE_DATE_EPOCH}"
  - ./developer-scripts/travis/test-script.${BUILD_TYPE:-cmake}.sh

after_script:
  - find . -name '*.gcno' -print
  - for version in ${GCC}; do bash <(curl -s https://codecov.io/bash) -x $(type -P gcov-${GCC}) >> coverage.log 2>> coverage.err || true ; done
  - tail coverage.log || true
  - tail coverage.err || true

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/93dbafbdf76c1732a623
      - https://webhooks.gitter.im/e/935231573bf1b9f2fe40
    on_success: change  # options: [always|never|change]
    on_failure: always
    on_start: always
  email:
    on_success: change
    on_failure: always
    on_start: never
